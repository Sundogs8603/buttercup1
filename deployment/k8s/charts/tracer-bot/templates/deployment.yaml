{{- if .Values.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-tracer-bot
  labels:
    app: tracer-bot
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      app: tracer-bot
  template:
    metadata:
      labels:
        app: tracer-bot
    spec:
      {{- include "buttercup.imagePullSecrets" . | nindent 6 }}
      initContainers:
      {{- include "buttercup.waitForRedis" . | nindent 6 }}
      {{- include "buttercup.waitForDocker" . | nindent 6 }}
      containers:
      - name: tracer-bot
        image: "{{ .Values.global.fuzzerImage.repository }}:{{ .Values.global.fuzzerImage.tag }}"
        imagePullPolicy: {{ .Values.global.fuzzerImage.pullPolicy }}
        command: ["buttercup-tracer-bot", "--wdir", "{{ include "buttercup.nodeLocalCrsScratchPath" . }}", "--redis_url", "{{ include "buttercup.core.redisUrl" . }}"]
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        livenessProbe:
          exec:
            command:
              - sh
              - -c
              - |
                # Create directory for health check
                mkdir -p /tmp/health-check
                
                # Get latest log hash
                CURRENT_LOGS=$(tail -n 10 /dev/stdout | grep -E "Sleeping, waiting for inputs|Received tracer|Acknowledging tracer" | md5sum)
                
                # If first run, just save and succeed
                if [ ! -f /tmp/health-check/log_hash.txt ]; then
                  echo "$CURRENT_LOGS" > /tmp/health-check/log_hash.txt
                  exit 0
                fi
                
                # Compare with previous hash
                PREV_LOGS=$(cat /tmp/health-check/log_hash.txt)
                if [ "$CURRENT_LOGS" != "$PREV_LOGS" ]; then
                  # Logs changed, update file and succeed
                  echo "$CURRENT_LOGS" > /tmp/health-check/log_hash.txt
                  exit 0
                else
                  # No log changes since last check
                  echo "No new log activity detected"
                  exit 1
                fi
          initialDelaySeconds: {{ .Values.healthCheck.initialDelaySeconds | default 60 }}
          periodSeconds: {{ .Values.healthCheck.periodSeconds | default 300 }}
          timeoutSeconds: {{ .Values.healthCheck.timeoutSeconds | default 10 }}
          failureThreshold: {{ .Values.healthCheck.failureThreshold | default 2 }}
        volumeMounts:
        {{- include "buttercup.standardVolumeMounts" (dict "usesTasksStorage" true) | nindent 8 }}
        {{- include "buttercup.nodeLocalVolumeMount" . | nindent 8 }}
        {{- include "buttercup.dockerSocketVolumeMount" . | nindent 8 }}
        - name: health-check-volume
          mountPath: /tmp/health-check
        env:
        {{- include "buttercup.env.dockerSocket" . | nindent 8 }}
        {{- include "buttercup.env.nodeData" . | nindent 8 }}
        {{- include "buttercup.env.telemetry" . | nindent 8 }}
      volumes:
      {{- include "buttercup.volumes.scratch" . | nindent 6 }}
      {{- include "buttercup.volumes.tasks" . | nindent 6 }}
      {{- include "buttercup.dockerSocketVolume" . | nindent 6 }}
      {{- include "buttercup.nodeLocalVolume" . | nindent 6 }}
      - name: health-check-volume
        emptyDir: {}
{{- end }}
